var A=(h,j)=>{let k;const v=()=>{clearTimeout(k)};return(...z)=>{v(),k=setTimeout(()=>{k=void 0,h(...z)},j)}},B=(h,j)=>{let k=0;return(...v)=>{const x=(new Date()).getTime();if(x-k<j)return;return k=x,h(...v)}},p=!1,D=A(()=>{p=!1,console.debug("Scrolling reset to",p)},250),y=B(()=>{try{if(console.debug("Scroll event triggered"),p)return;const j=(window.scrollY||document.documentElement.scrollTop||document.body.scrollTop||0)/document.documentElement.scrollHeight;console.debug("Scroll event triggered, sending syncScroll message with percentage:",j),chrome.runtime.sendMessage({command:"syncScroll",data:{scrollYPercentage:j}})}catch(h){console.error(`Error in onScrollHandler: ${h}`)}},50);chrome.runtime.onMessage.addListener((h)=>{if(h.command==="startSyncTab")console.debug("Content script loaded for tab",h.data),window.addEventListener("scroll",y),console.debug("Scroll event listener registered");if(h.command==="stopSyncTab")window.removeEventListener("scroll",y);if(h.command==="syncScrollForTab"){p=!0,console.debug("Received syncScrollForTab message with data",h.data);const{scrollYPercentage:j}=h.data,k=j*document.documentElement.scrollHeight;window.scrollTo({top:k,behavior:"instant"}),D()}});
